<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.3/jquery.min.js"></script>

<div class="row">
  <div class="col-xs-9 col-sm-9">
  <br />
    <div class="pull-right">
      <% link_to "Profile Search", profiles_path, class: 'btn btn-default btn-lg btn-warning', "data-no-turbolink"=>"true" %>
    </div>
  </div>
</div>

<!--
 form_for(phase) do |f| %>


<hidden="true">
 f.submit "Send", :class=> "btn btn-info btn-sm" %>
button_to "Acknowledged", { :controller => 'messgs', :action => "sendcustom", :id => @messg.id}


 f.submit(:class=> "btn btn-info btn-lg", :id => "hiddensubmit#{phase.id}", :style => "visibility:hidden") %>
 end %>

-->


<!--<html>
  <head>-->
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    <script type="text/javascript">
      google.load("visualization", "1", {packages:["corechart"]});
      google.setOnLoadCallback(load_page_data);



  	  JORDANS_APP = {};

  	  JORDANS_APP.getChunck = function() {
        //if not in a buy chunck 50 otherwise chunck by win or loss
        var $tempdata = [];
        var $chart_array = [];
        var $x = 0;

        while($x < 51){
          $tempdata.push($containdata.shift());
          $x++;
        }
        $.each($tempdata, function(i, price) {
          if(price) {
            $chart_array.push(['day', price.low, price.close, price.open, price.high]);
          }
        });
        return $chart_array;
  	  };

  	  JORDANS_APP.drawSegment = function(chartData, index) { //gets data to draw
  		if(index < chartData.length){
  			setTimeout( function(){
  				drawChart(chartData.slice(0,index));
  				index++;
  				JORDANS_APP.drawSegment(chartData, index);
  			}, 80);
  		}
  	  };


      function load_page_data(){

        var $prices = $('#orders');
        var $name = "";//$('#name');
        var $last_id = 0;//$('#last_id');
        var $chart_array = [];
        var $tempdata = [];
        var $x = 0;

        var $containdata = [];
        var $startingcounter = 0;

        var $prevevent;
        var $interumlow = 10000.0;
        var $interumhigh = -10000.0;


        $.ajax({
          type: 'GET',
          url: '/orders',
          success: function(prices) {
      		  //put months data in containdata
            $.each(prices, function(i, price) {
              if(price) {
                $containdata.push(price); //.slice = takes index 1 to 2 and return it as a new array // or /shift
              }
            });

            //if not in a buy chunck 50 otherwise chunck by win or loss

            //algo to win or lose:
              //I have:
                //current object (all I care aboue it close)
                //buy or sell (irrelevant)
                //Previous stop point object (all I care about is the high and low)
                //interum high, interum low (highest high and lowest low since last event)
              //I'm looking for
                //trend reversals
                //breakouts
              //criteria:
                //must close outside of interum high's or lows
                //must close higher that previous event's high (if its a high candidate), or lower than previous events low (if its a low candidate).
              //so, maybe we do this sudo code:
                //If candidate's close is lower than previous event's low and candidate closes below interum low then
                  //this is a new low
                //else if candidate's close is higher than previous event's high and candidate closes above interum high then
                  //this is a new high
                //else if there is no preivous event then
                  //continue to load until you hit 50
                //endif
                //PS might also need to be outisde of a minimum range
                //PS might also include the ability to set stop loss and take profits so yeah.

            //other thing I have to do is figure out how to remove stuff from the running screen so I never have more than 50 Candlesticks in it at a time.

            //after I do all that I have to figure out how to make it so it'll calculate the score upon every stop.

            //Then I'm done with MVP

      //      while($x < 50){
      //        //alert($x);
      //        if(0 <= $containdata.length) {
      //          $tempdata.push($containdata.shift());
      //        }
      //        //alert($tempdata[$x].low);
      //        $x++;
      //      }

            //if there is no preivous event then
            //if !($prevevent){ //if $interumlow == 10000.0
              //continue to load until you hit 50
              while($x < 50){
                //alert($x);
                if(0 <= $containdata.length) {
                  //make temp array
                  $tempdata.push($containdata.shift());
                  //check for interumlow, and interum high
                  if($tempdata.length > 1){
                    if($tempdata($tempdata.length-2).low < $interumlow){
                      $interumlow = $tempdata($tempdata.length-2).low;
                    }
                    if($tempdata($tempdata.length-2).high > $interumhigh){
                        $interumhigh = $tempdata($tempdata.length-2).high;
                    }
                  }
                }
                $x++;
              }
              //once you get to the end, assign that to your prevevent
              $prevevent = $tempdata($tempdata.length-1);
            //} //If candidate's close is lower than previous event's low and candidate closes below interum low then
            if ($conditionaldata[0].close < $prevevent.low && $conditionaldata[0].close < $interumlow){
              //this is a new low
            } //else if candidate's close is higher than previous event's high and candidate closes above interum high then
            else if !($conditionaldata[0].close > $prevevent.high && $conditionaldata[0].close > $interumhigh){
              //this is a new high
            } //endif





            $.each($tempdata, function(i, price) {
              if(price) {
                $chart_array.push(['day', price.low, price.close, price.open, price.high]);
                $last_id = price.id;
                $name = price.ticker;
              }
            });

            drawChart($chart_array);

//            $.each(prices, function(i, price) {
//              if(price) {
//                $chart_array.push(['day', price.low, price.close, price.open, price.high]);
//                drawChart($chart_array);
//              }
//              $last_id = price.id;
//              $name = price.ticker;
              //if ($startingcounter > 24)
                //return false;
//            });
          },
          error: function() {
            alert('error loading prices')
          }
        });

		$('#add-order').on('click',function(){
          var order = {
            name: $name,
            id: $last_id,
          };
          $.ajax({
            type: 'POST',
            url: '/orders',
            data: order,//order,
            success: function(prices) {
              if(prices) {
                //oldchart = $chart_array;
                $chart_array.push(['day', prices.low, prices.close, prices.open, prices.high]);
                //chart_data = ([oldchart, $chart_array]);
                //alert(chart_data);
                drawChart($chart_array);
              }
              //$prices.append('<li>Name: ' + prices.ticker + '</li>');
              $last_id = prices.id;
              $name = prices.ticker;
            },
            error: function() {
              alert('error saving order' + order.id);
            }
          });
        });
      }




      function drawChart(chart_data) {
        var data = google.visualization.arrayToDataTable(chart_data, true);
          //[
          //[ days[2], lows[2], closes[2], opens[2], highs[2]],
          //['Thu', 50, 76, 66, 77],
          //['Fri', 62, 66, 76, 80]
          // Treat first row as data as well.
        //], true);

        var options = {
          legend:'none'
        };

        var chart = new google.visualization.CandlestickChart(document.getElementById('chart_div'));

        chart.draw(data, options);
      }
  </script>
<!--  </head>
  <body>-->
<div id="chart_div" style="width: 900px; height: 500px;"></div>

<!--
<ul id="orders">
  <li>name, drink</li>
</ul>

<h4>add a order</h4>

<p>Name: <input type="text" id="name"></p>
<p>Drink: <input type="text" id="last_id"></p>
-->
<button id="add-order" class="btn btn-default btn-lg btn-primary">Short</button>

<button id="add-order" class="btn btn-default btn-lg btn-primary">Long</button>












































<!--  </body>
</html>
-->

<% if current_user.profile.title == "admin" || current_user.profile.title == "master" %>
  <br />
  <br />
  <br />
  <br />
  <br />
  <br />
  <br />
  <br />
  <br />
  <br />
  <br />
  <br />
  <br />
  <br />
  <br />
  <br />
  <%= link_to "Prices", prices_path, class: 'btn btn-default btn-lg', "data-no-turbolink"=>"true" %>
<% end %>
